package com.Project.quiz_service.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.Project.quiz_service.model.QuizDTO;
import com.Project.quiz_service.model.QuizQuestions;
import com.Project.quiz_service.model.Response;
import com.Project.quiz_service.service.QuizService;

@Controller
@RequestMapping("quiz")
public class QuizController {

	@Autowired
	QuizService quizService;
	
	@PostMapping("create")
	public ResponseEntity<String> createQuiz(@RequestBody QuizDTO quizDTO){
		return quizService.createQuiz(quizDTO.getCategory(), quizDTO.getNumQ(), quizDTO.getTitle());
	}
	
	@GetMapping("get/{id}")
	public ResponseEntity<List<QuizQuestions>> getQuiz(@PathVariable String id){
		return quizService.findQuestionsByQuizId(id);
	}
	
	//we will pass data in where we will give quiz id and response of each question with it's id
	//localhost:8080/quiz/submit/67a87b49a807ab61600ef547
	/**[{
    "id":"67a87453420e74cfb7d4a03d",
    "response":"Callbacks"
},

{
    "id":"67a87ae9420e74cfb7d4a04a",
    "response":"Arrow functions cannot be used as object methods"
},

{
    "id":"67a87ae9420e74cfb7d4a04c",
    "response":"A promise has three states: pending, resolved, rejected"
},

{
    "id":"67a87453420e74cfb7d4a03c",
    "response":"'object'"
},

{
    "id":"67a87ae9420e74cfb7d4a04b",
    "response":"JavaScript has 6 primitive data types"
}

]
**/
	@PostMapping("submit/{id}")
	public ResponseEntity<Integer> calculateResult(@PathVariable String id, @RequestBody List<Response> responses){
		return quizService.calculateResult(id, responses);
	}
}
